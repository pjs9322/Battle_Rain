package display_Set;

import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import javax.swing.JPanel;

import control.control;

public abstract class display_Set extends JPanel implements ActionListener {
	private static final long serialVersionUID = 1L;
	protected Toolkit toolkit = Toolkit.getDefaultToolkit();
	
	protected ActionListener actionListener;
	protected control control;

	private display_Set view_style;
	
	public display_Set() {
		this.actionListener = new ActionHandler();
		this.view_style = this;
	}

	public abstract void draw(Graphics g);
	public abstract void init_Parts();
	public void init_View(control control) {this.control = control;}

	private class ActionHandler implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent e) {
				invoke(view_style, e.getActionCommand(), null);
		}
	}

	public static Object invoke(Object obj, String methodName, Object[] parameter) {
		Method[] methods = obj.getClass().getMethods();
		
		for(Method method: methods) {
			if(method.getName().equals(methodName)) {
				try {
					if (method.getReturnType().getName().equals("void")) {
						method.invoke(obj, parameter);        
					} else {
						return method.invoke(obj, parameter);
					}
				} catch(IllegalAccessException | InvocationTargetException e) {}
			}
		}
		return null;
	}
}
