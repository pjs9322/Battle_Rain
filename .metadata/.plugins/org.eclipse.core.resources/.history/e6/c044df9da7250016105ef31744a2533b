package display_Sub;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import javax.swing.JPanel;

abstract class subPanel extends JPanel implements ActionListener {
		private static final long serialVersionUID = 1L;

		public void paint(Graphics g) {
			this.draw(g);
		}
		
		abstract public void draw(Graphics g);

		@Override
		public void actionPerformed(ActionEvent e) {
			invoke(sub_style, e.getActionCommand(), null);
		}

		public Object invoke(Object obj, String methodName, Object[] parameter) {
			Method[] methods = obj.getClass().getMethods();
			
			for(Method method: methods) {
				if(method.getName().equals(methodName)) {
					try {
						if (method.getReturnType().getName().equals("void")) {
							method.invoke(obj, parameter);        
						} else {
							return method.invoke(obj, parameter);
						}
					} catch(IllegalAccessException | InvocationTargetException e) {}
				}
			}
			return null;
		}
	}