package display_Set;

import java.awt.Graphics;
import java.util.Vector;

import javax.swing.ImageIcon;
import javax.swing.JButton;

import main.constant;
import display_Sub.Room_Make;
import display_Sub.Room_Search;

public class Wait extends display_Set {
	private static final long serialVersionUID = 1L;

	private Vector<JButton> chara_Button = new Vector<JButton>();
	
	private JButton make_Room_Button = new JButton();
	private JButton search_Room_Button = new JButton();
	private JButton logout_Button = new JButton();

	private Room_Make make;
	private Room_Search search;

	public Wait() {
		super();
		this.add(make_Room_Button);
		this.add(search_Room_Button);
		this.add(logout_Button);

		for (int i = 0; i < constant.W_B_Route.length; i++) {
			chara_Button.add(new JButton(new ImageIcon(constant.W_B_Route[i])));
			this.add(chara_Button.get(i));
		}
	}
	
	@Override
	public void draw(Graphics g) {
		g.drawImage(toolkit.getImage(constant.W_I_Route[0]), 0, 0, this);
		g.drawImage(toolkit.getImage(constant.W_I_Route[1]), 300, 200, this);
		g.drawImage(toolkit.getImage(constant.W_I_Route[2]), 300, 300, this);
	}

	@Override
	public void init_Parts() {
		this.make_Room_Button.setBounds(460, 540, 134, 61);
		this.make_Room_Button.setBorderPainted(false);
		this.make_Room_Button.setIcon(new ImageIcon(constant.W_I_Route[3]));
		this.make_Room_Button.setPressedIcon(new ImageIcon(constant.W_I_Route[4]));
		this.make_Room_Button.addActionListener(this);
		this.make_Room_Button.setActionCommand("make_Room");

		this.make_Room_Button.setBounds(460, 540, 134, 61);
		this.make_Room_Button.setBorderPainted(false);
		this.make_Room_Button.setIcon(new ImageIcon(constant.W_I_Route[5]));
//		this.make_Room_Button.setPressedIcon(new ImageIcon(constant.L_I_Route[]));
		this.search_Room_Button.addActionListener(this);
		this.search_Room_Button.setActionCommand("search_Room");

		this.make_Room_Button.setBounds(460, 540, 134, 61);
		this.make_Room_Button.setBorderPainted(false);
		this.make_Room_Button.setIcon(new ImageIcon(constant.W_I_Route[5]));
//		this.make_Room_Button.setPressedIcon(new ImageIcon(constant.L_I_Route[]));
		this.logout_Button.addActionListener(this);
		this.logout_Button.setActionCommand("user_Logout");
		
		for (int i = 0; i < constant.W_B_Route.length; i++) {
		}
	}
	
	public void make_Room() {
		if (this.make == null) {
			this.make = new Room_Make(control);
		} else if (!this.make.isDisplayable()) {
			this.make = new Room_Make(control);
		} else if (!this.make.isFocused()) {
			this.make.requestFocus();
		}
	}

	public void search_Room() {
		if (this.search == null) {
			this.search = new Room_Search(control);
		} else if (!this.search.isDisplayable()) {
			this.search = new Room_Search(control);
		} else if (!this.search.isFocused()) {
			this.search.requestFocus();
		}
	}
	
	public void user_Logout() {
		this.control.user_Logout();
	}
}
