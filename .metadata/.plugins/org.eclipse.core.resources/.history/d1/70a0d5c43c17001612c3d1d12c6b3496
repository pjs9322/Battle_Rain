package display_Set;

import java.awt.Button;
import java.awt.Graphics;
import java.awt.Label;
import java.net.InetAddress;
import java.net.UnknownHostException;

import javax.swing.JFrame;
import javax.swing.JPanel;

import display_Sub.Room_Make;

public class Wait extends display_Set {
	private static final long serialVersionUID = 1L;

	private Button make_Room_Button = new Button("방 만들기");
	private Button search_Room_Button = new Button("방 검색");
	private Button logout_Button = new Button("로그아웃");
	private Label ip_Label = new Label("현재 IP : 000.000.000.000");
	private InetAddress ip;

	private Sub_Frame subFrame;
	private Room_Make make;

	public Wait() {
		super();
		this.add(make_Room_Button);
		this.add(search_Room_Button);
		this.add(logout_Button);
		this.add(ip_Label);
	}
	
	@Override
	public void draw(Graphics g) {
		
	}

	@Override
	public void init_Parts() {
		this.make_Room_Button.addActionListener(actionListener);
		this.make_Room_Button.setActionCommand("make_Room");

		this.search_Room_Button.addActionListener(actionListener);
		this.search_Room_Button.setActionCommand("search_Room");
		
		this.logout_Button.addActionListener(actionListener);
		this.logout_Button.setActionCommand("user_logout");
		
		try {
			ip = InetAddress.getLocalHost();
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.ip_Label.setText("현재 IP : " + ip.getHostAddress());
	}
	
	public void make_Room() {
		if (subFrame == null) {
			make = new Room_Make();
			subFrame = new Sub_Frame(make);
		} else if (!subFrame.isDisplayable()) {
			make = new Room_Make();
			subFrame = new Sub_Frame(make);
			subFrame.setAlwaysOnTop(true);
		} else if (!subFrame.isFocused()) {
			make.requestFocus();
		}
	}

	public void search_Room() {
		
	}
	
	public void user_logout() {
		state_code = 1;
	}
	
	private class Sub_Frame extends JFrame {
		private static final long serialVersionUID = 1L;

		public Sub_Frame(JPanel subPanel) {
			this.add(subPanel);
			this.setSize(250, 120);
			this.setVisible(true);
			this.setAlwaysOnTop(true);
			this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
		}
	}
}
